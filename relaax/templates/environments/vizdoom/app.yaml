---
# There are sample for Gym Doom environment

environment:
  run: python environment/training.py
  name: ppaquette/DoomMyWayHome-v0
  max_episodes: 10000
  infinite_run: false

relaax-metrics-server:
  enable_unknown_metrics: true
  metrics:
    episode_reward: true
    server_latency: false
    action: true
    critic: true
    state: false

  bind: localhost:7002
  metrics_dir: logs/metrics
  log_metrics_to_console: false
  log_level: INFO

relaax-parameter-server:
  bind: localhost:7000
  checkpoint-dir: logs/checkpoints
  checkpoint_step_interval: 2000000
  checkpoints_to_keep: 4
  log-level: INFO

relaax-rlx-server:
  bind: localhost:7001
  log-level: INFO

version: 1.1.0
algorithm:
  name: da3c

  input:
    shape: [42, 42]               # state: [height, width] or [height, width, channels]
    history: 1                    # number of consecutive states to stuck to represent an input
    use_convolutions: true        # set to True to use convolutions to process the input,
                                  # it uses the set of convolutions from universe architecture by default
  output:
    continuous: false             # set to True to handle with continuous action type
    action_size: 4                # action size for the given environment

  hidden_sizes: [288]             # list of num_units for hidden layers
  batch_size: 20                  # experience size for one update

  use_icm: true                   # set to true to use Intrinsic Curiosity Module (ICM) module
  use_lstm: true                  # to use LSTM instead of FF, set to the True
  max_global_step: 1e8            # amount of maximum global steps to pass through the training

  rewards_gamma: 0.99             # rewards discount factor

  initial_learning_rate: 1e-4     # initial learning rate to start the training
  use_linear_schedule: false      # set to True to use linear learning rate annealing wrt max_global_step

  optimizer: Adam                 # type of optimizer to use: Adam | RMSProp
  gradients_norm_clipping: 40.    # value to clip the gradients by its global norm
  critic_scale: 0.25              # coefficient to scale the critic loss or its learning rate wrt policy

  combine_gradient: dc            # gradient's combining method: dc | fifo | average
  dc_lambda: 0.05                 # delay compensation regularization constant

  ICM:
    nu: 1e-2
    beta: 0.2
    lr_scale: 10
    nn_share: false
    backprop_input: true
